배포

1. d/deploy/jsp 폴더에 github에서 소스코드를 clone
#1-2. 소스코드를 최신화되도록 github에서 pull
cd jsp
git pull

#2. maven을 이용하여 war 파일로 생성
mvn package

#3. tomcat이 기동중이라고 가정하고 suhtdown.sh을 실행(서버 종료)
/d/B_Util/5.ApacheTomcat/apache-tomcat-8.5.37-windows-x64/apache-tomcat-8.5.37/bin/shutdown.sh

#4. 2번과정에서 생성된 파일 (jsp-0.0.1-SNAPSHOT.war)의 이름을 jsp.war로 수정
cd target
mv ./jsp-0.0.1-SNAPSHOT.war ./jsp.war

#5-0. webapps 폴더에 존재하는 jsp 폴더와 jsp.war파일을 삭제
rm /d/B_Util/5.ApacheTomcat/apache-tomcat-8.5.37-windows-x64/apache-tomcat-8.5.37/webapps/jsp.war
rm -rf /d/B_Util/5.ApacheTomcat/apache-tomcat-8.5.37-windows-x64/apache-tomcat-8.5.37/webapps/jsp

#5. 4번과정에서 만들어진 jsp.war파일을 tomcat의 webapps폴더에 복사
cp ./jsp.war /d/B_Util/5.ApacheTomcat/apache-tomcat-8.5.37-windows-x64/apache-tomcat-8.5.37/webapps

#6. tomcat을 기동 - startup.sh(서버 시작)
/d/B_Util/5.ApacheTomcat/apache-tomcat-8.5.37-windows-x64/apache-tomcat-8.5.37/bin/startup.sh

만들어진 war 파일을 tomcat의 webapps 폴더에 복사
단 컨텍스트 패스(웹 어플리케이션의 이름)를 고려해서 war 파일의 이름을 적절하게 수정

톰캣 실행

git bash에서
ls -al 하고 나오는 rwx --- --- ==> 파일소유자 그룹 모든사용자 ==> 2진법 rwx : 권한 7








http://localhost:8081/jsp/basicServlet